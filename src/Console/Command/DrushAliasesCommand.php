<?php

/**
 * @file
 * Main file for `drush:aliases` command.
 */

namespace ChapterThree\LocalDev\Console\Command;

use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;

/**
 * Class for `ldev` command.
 */
class DrushAliasesCommand extends BaseCommand {

  const HEAD = <<<'EOD'
<?php

/**
 * @file
 * Aliases generated by ldev drush:aliases.
 */

EOD;

  /**
   * {@inheritdoc}
   */
  protected function configure() {

    parent::configure();
    $this
      ->setName('drush:aliases')
      ->setDescription('Generate Drush aliases for any currently running sites.');

  }

  /**
   * {@inheritdoc}
   */
  protected function execute(InputInterface $input, OutputInterface $output) {
    parent::execute($input, $output);

    $this->getProjects($input, $output);

    $output->writeln(self::HEAD);

    $export_alias = function($key, $alias) {
      return '$aliases[\'' . $key . '\'] = ' .
        var_export($alias, TRUE) . ";\n";
    };

    foreach ($this->projects as $key => $values) {

      if (empty($values['ports']['db']) ||
          empty($values['ports']['ssh'])
      ) {
        // @todo throw exception.
        continue;
      }

      list($remote_user, $remote_host, $remote_port, $ssh_options,)
        = $this->getRemoteWeb($input, $output, $key);

      // D7-style db url.
      $db_url = $values['ldev']['db']['driver'] . '://' .
        $values['ldev']['db']['user'] . ':' .
        $values['ldev']['db']['password'] . '@' .
        $remote_host . ':' .
        $values['ports']['db'] . '/drupal';

      $alias = [
        'db-url' => $db_url,
        'remote-host' => $remote_host,
        'remote-user' => $remote_user,
        'ssh-options' => "-A -p " . $remote_port . $ssh_options,
        'root' => $values['ldev']['web']['root'],
        'path-aliases' => [
          '%drush-script' => 'drush-remote',
        ],
      ];

      if (isset($values['ports']['http'])) {
        $alias['uri'] = 'http://' .
          ($input->getOption('vagrant') ? 'local.dev' : $remote_host) .
          ':' . $values['ports']['http'];
        $output->writeln($export_alias($key, $alias));
      }
      if (isset($values['ports']['https'])) {
        $alias['uri'] = 'https://' .
          ($input->getOption('vagrant') ? 'local.dev' : $remote_host) .
          ':' . $values['ports']['https'];
        $output->writeln($export_alias($key . '.ssl', $alias));
      }

    }

  }

}
